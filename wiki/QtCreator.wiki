#summary Setup IDE QtCreator for building lg-elfs
= Предисловие =
QtCreator является мощной IDE написанной на С++Qt для использования в связке с библиотеками Qt. Но у ide есть возможность подстраивать среду под свои нужды. Чем мы и займёмся.
<hr>

= Установка Qt и QtCreator =
== Windows ==
[http://qt-project.org/downloads Скачиваем Qt4] библиотеки(Не sdk полностью, там много ненужного) и QtCreator. 
Должно выглядеть примерно так(Выбирать версию с MinGW!): Qt libraries 4.8.4 for Windows (minGW 4.4, 317 MB)

Минимальная версия QtCreator - 2.6.
Примерно так: Qt Creator 2.7.1 for Windows (52 MB) 

== Unix ==
Ставим все штатными средствами из репозиториев. Qt4 и QtCreator

<hr>
= Установка gcc =
[http://code.google.com/p/lg-phone-develop/wiki/CompillersSetup Читать], если ещё не читали

<hr>
= Настройка конфигов =
Для начала нам нужно найти папку "mkspecs". На unix-like ОС она находится по пути "/usr/share/qt/mkspecs/" либо "/usr/local/share/qt/mkspecs/". 
На ОС семейства Windows она находится в папке с установленым Qt.
Скачиваем под свою ос по [http://code.google.com/p/lg-phone-develop/source/browse/#svn%2Fwiki%2FQtCreator данной] ссылке папки и распихиваеем их в папку с Qt.
Далее, нам нужно заменить пути расположения либ и хедеров:

Открываем ${ВАША_ПАПКА_С_Qt}/mkspecs/unsupported/lg-gcc/qmake.conf:
<code>
INCLUDEPATH           = /home/vova7890/compilers/lg/include/ 
QMAKE_INCDIR          = /home/vova7890/compilers/lg/include/
INCLUDEPATH           += /home/vova7890/compilers/lg/include/native_api/
QMAKE_INCDIR          += /home/vova7890/compilers/lg/include/native_api/
QMAKE_LIBDIR          = /home/vova7890/compilers/lg/lib/
</code>

/home/vova7890/compilers/lg - заменяем на свой. 

В windows версии можно не менять, если вы установили gcc в C:\lg-dev

<hr>
= Настройка компиляторов =
Настраиваем компилятор:
 * Инструменты -> Сборка и запуск
 * Вкладка "Компиляторы", жмём "добавить" -> выпадающий список, выбираем "gcc"
  # Название: arm-eabi-gcc
  # Путь к компилятору: /usr/arm-eabi/bin/g++(Указываем свой, куда устанавливали)
  # ABI: особое | arm - unix - generic - elf - 32
Настраиваем инструментарий:
 * Инструменты -> Сборка и запуск
 * Вкладка "инструментарий", жмём "добавить"
  # Название: arm-eabi-gcc
  # Тип устройства: Desktop
  # Устройство: Локальный запуск
  # Sysroot: 
  # Компилятор: arm-eabi-gcc
  # Профиль: выбираем любой
  # Qt mkspec: unsupported/lg-gcc
Все, сохраняем, создаём проект:
  * Как обычно, "Создать новый проект или файл"
  * Проект без использования Qt -> Простой проект на языке С(или С++), далее
  * Вводим имя проекта
  * Выбираем наш компилятор arm-eabi-gcc галочкой, остальные убираем
Все, теперь осталось подстроить проект:
  * Открываем .pro файл
  * Вписываем необходимые либы, по желанию или надобности c, c++, и т.п.
<code language="ini">
LIBS   += -lcrt -lscrt -lgcc
</code>

Дополнительные параметры:
<code language="bash">
# имя исполняемого файла
TARGET = atfs.elf

# темплейт, точно не знаю зачем
TEMPLATE = app

# мы не желаем использовать Qt
CONFIG -= qt
</code>

<hr>
Все, теперь можем собирать проект и кидать на телефон ;)
Удачи!